{"version":3,"file":"static/js/movie-details-page.a51382fd.chunk.js","mappings":"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","sources":["webpack:///./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_information\":\"MovieDetailsPage_main_information__LZJlA\",\"poster\":\"MovieDetailsPage_poster__gDkbr\",\"genre\":\"MovieDetailsPage_genre__WYkMc\"};","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  NavLink,\r\n  Routes,\r\n  Route,\r\n  useParams,\r\n  useNavigate,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport * as moviesAPI from 'services/movies-api';\r\nimport s from './MovieDetailsPage.module.css';\r\n\r\nconst Cast = lazy(() =>\r\n  import('../Cast/Cast.js' /* webpackChunkName: \"cast\" */),\r\n);\r\nconst Reviews = lazy(() =>\r\n  import('../Reviews/Reviews.js' /* webpackChunkName: \"reviews\" */),\r\n);\r\n\r\nconst MovieDetailsPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\r\n\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovieById(movieId).then(setMovie);\r\n  }, [movieId]);\r\n\r\n  const goBack = () => navigate(location?.state?.from?.location ?? '/');\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={goBack}>\r\n        {location?.state?.from?.label ?? 'Back to trending movies'}\r\n      </button>\r\n      {movie && movie.status_code !== 34 ? (\r\n        <>\r\n          <div className={s.main_information}>\r\n            <img\r\n              className={s.poster}\r\n              src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\r\n              alt={movie.title}\r\n            />\r\n            <div>\r\n              <h1>\r\n                {movie.title} ({movie.release_date.split('-')[0]})\r\n              </h1>\r\n              <p>User Score: {movie.vote_average * 10}%</p>\r\n              <h2>Overview</h2>\r\n              <p>{movie.overview}</p>\r\n              <h2>Genres</h2>\r\n              <div className={s.genres}>\r\n                {movie.genres.map(genre => (\r\n                  <span key={genre.id} className={s.genre}>\r\n                    {genre.name}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p>Additional information</p>\r\n            <ul>\r\n              <li>\r\n                <NavLink\r\n                  to=\"cast\"\r\n                  state={{\r\n                    from: location?.state?.from ?? '/movies',\r\n                  }}\r\n                >\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to=\"reviews\"\r\n                  state={{\r\n                    from: location?.state?.from ?? '/movies',\r\n                  }}\r\n                >\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h2>The resource you requested could not be found.</h2>\r\n      )}\r\n\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Routes>\r\n          <Route path=\"cast\" element={<Cast />} />\r\n          <Route path=\"reviews\" element={<Reviews />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'dc08feb60c6ae64654b90b4c6566ac10';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieSearch(query) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`,\r\n  );\r\n}\r\n"],"names":["Cast","lazy","Reviews","location","useLocation","navigate","useNavigate","movieId","useParams","slug","match","useState","movie","setMovie","useEffect","moviesAPI","then","type","onClick","state","from","label","status_code","className","s","src","poster_path","alt","title","release_date","split","vote_average","overview","genres","map","genre","name","id","to","Suspense","fallback","path","element","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieById","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","query"],"sourceRoot":""}